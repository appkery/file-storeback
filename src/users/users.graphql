type User {
  id: Int!
  username: String!
  password: String!
  full_name: String!
  # roles: [Role]
  is_active: Boolean
}

input GetUserInput {
  username: String!
}

type Query {
  getUser(getUserInput: GetUserInput!): User
  getUsers: [User]
}

input CreateUserInput {
  username: String!
  password: String!
  full_name: String!
  # roles: [CreateRoleInput]
  is_active: Boolean
}

input UpdateUserInput {
  id: Int!
  username: String
  password: String
  full_name: String
  # roles: [UpdateRoleInput]
  is_active: Boolean
}

type Mutation {
  createUser(createUserInput: CreateUserInput!): User
  updateUser(updateUserInput: UpdateUserInput!): UpdateResult
  deleteUser(id: Int!): DeleteResult
}
